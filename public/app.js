(()=>{"use strict";var n={295:(n,e,r)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.updateAppName=e.setSelectedApp=e.getSelectedApp=e.getAppList=e.appRegisterService=e.selectedApp=e.appList=void 0,r(499);var t,o=(t=r(38))&&t.__esModule?t:{default:t},i=[],A=null;e.appList=i,e.selectedApp=A,e.appRegisterService=function(n){i.push(n)},e.getAppList=function(){return e.appList=i=[].concat(function(n){if(Array.isArray(n)){for(var e=0,r=Array(n.length);e<n.length;e++)r[e]=n[e];return r}return Array.from(n)}(o.default)),i},e.getSelectedApp=function(n){return A},e.setSelectedApp=function(n){e.selectedApp=A=n},e.updateAppName=function(n,e){i.find((function(e){return e.id===n}))&&(i.find((function(e){return e.id===n})).name=e)}},38:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=[{name:"0001-app",id:"9eb2fd3c-809b-4e04-9ad4-56574cfdb545"},{name:"0002-app",id:"4e9ef95e-a1bb-4049-90e0-32d5e48b24c9"},{name:"0003-app",id:"c5599c42-57fe-4045-87ca-4696de9900c9"}]},149:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0});var r=function(){function n(n,e){for(var r=0;r<e.length;r++){var t=e[r];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}return function(e,r,t){return r&&n(e.prototype,r),t&&n(e,t),e}}(),t=function(){function n(e,r){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.form=e,this.fields=r}return r(n,[{key:"initialize",value:function(){this.validateOnSubmit(),this.validateOnEntry()}},{key:"validateOnSubmit",value:function(){var n=this;this.form.addEventListener("submit",(function(e){e.preventDefault(),n.fields.forEach((function(e){var r=document.querySelector("#"+e);n.validateFields(r)}))}))}},{key:"validateOnEntry",value:function(){var n=this;this.fields.forEach((function(e){var r=document.querySelector("#"+e);r.addEventListener("input",(function(e){n.validateFields(r)})),r.addEventListener("change",(function(e){n.validateFields(r)}))}))}},{key:"setStatus",value:function(n,e,r){var t=n.parentElement.querySelector(".icon-error"),o=n.parentElement.querySelector(".error-message");"success"===r&&(t&&t.classList.add("hidden"),o&&(o.innerText=""),n.classList.remove("input-error")),"error"===r&&(n.parentElement.querySelector(".error-message").innerText=e,n.classList.add("input-error"))}},{key:"validateFields",value:function(n){""===n.value.trim()?this.setStatus(n,"cannot be blank","error"):this.setStatus(n,null,"success")}}]),n}();e.default=t},499:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.uuidv4=function(){return([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,(function(n){return(n^crypto.getRandomValues(new Uint8Array(1))[0]&15>>n/4).toString(16)}))}},112:(n,e,r)=>{r.d(e,{Z:()=>a});var t=r(15),o=r.n(t),i=r(645),A=r.n(i)()(o());A.push([n.id,".ripple {\n  animation: ripple 3s linear infinite;\n}\n\n.ripple::before,\n.ripple::after {\n  animation-delay: 1s;\n}\n\n@keyframes ripple {\n  0% {\n    box-shadow: 0 0 0 0.1rem rgba(36, 172, 235, 0.2);\n  }\n  100% {\n    box-shadow: 0 0 0 0.7rem rgba(255, 255, 255, 0);\n  }\n}","",{version:3,sources:["webpack://./src/css/animation.scss"],names:[],mappings:"AAAA;EACE,oCAAA;AACF;;AACA;;EAEE,mBAAA;AAEF;;AAAA;EACE;IACE,gDAAA;EAGF;EADA;IACE,+CAAA;EAGF;AACF",sourcesContent:[".ripple {\r\n  animation: ripple 3s linear infinite;\r\n}\r\n.ripple::before,\r\n.ripple::after {\r\n  animation-delay:1s;\r\n}\r\n@keyframes ripple {\r\n  0% {\r\n    box-shadow: 0 0 0 .1rem rgba(36, 172, 235, 0.2);\r\n  }\r\n  100% {\r\n    box-shadow: 0 0 0 .7rem rgba(255,255,255, 0);\r\n  }\r\n}"],sourceRoot:""}]);const a=A},747:(n,e,r)=>{r.d(e,{Z:()=>a});var t=r(15),o=r.n(t),i=r(645),A=r.n(i)()(o());A.push([n.id,'.main-font {\n  font-family: "Courier New", Courier, monospace;\n  color: black;\n  font-size: 12pt;\n}\n\ninput.btn {\n  background-color: #3363cc;\n  border: none;\n  color: white;\n  padding: 7px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  margin: 4px 2px;\n  cursor: pointer;\n  outline: none;\n}\n\n.btn {\n  border-radius: 6px;\n}\n.btn:active {\n  box-shadow: 0 1px 0 #3363cc;\n}\n.btn.btn-register {\n  padding: 11px;\n}\n.btn.btn-update {\n  background-color: #3c9c3c;\n  padding: 11px;\n}\n\n.app-list {\n  list-style-type: none;\n  padding: inherit;\n}\n\n.app-name-link {\n  text-decoration: none;\n  cursor: pointer;\n  font-weight: bold;\n}\n\ninput {\n  display: flexbox;\n  margin: 10px 0;\n  padding: 10px;\n}\n\n.type-1 {\n  border-radius: 10px;\n  border: 1px solid #eee;\n  transition: 0.3s border-color;\n}\n.type-1:hover {\n  border: 1px solid #aaa;\n}\n\n.type-2 {\n  background-color: #fafafa;\n  border: 0;\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.3);\n  transition: 0.3s box-shadow;\n}\n.type-2:hover {\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.5);\n}\n\n.hidden {\n  display: none !important;\n}\n\n.icon {\n  width: 24px;\n  height: 24px;\n  top: 32px;\n  right: 5px;\n  pointer-events: none;\n  z-index: 2;\n}\n.icon.icon-success {\n  fill: green;\n}\n.icon.icon-error {\n  fill: red;\n}\n\n.container {\n  max-width: 800px;\n  margin: 3rem auto;\n  padding: 3rem;\n  border: 1px solid #ddd;\n  border-radius: 0.25rem;\n  background-color: white;\n  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n}\n\n.input {\n  appearance: none;\n  color: #2d3748;\n  border: 1px solid #cbd5e0;\n  line-height: 1.25;\n  background-color: white;\n  padding: 0.65rem 0.75rem;\n  border-radius: 0.25rem;\n  box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, 0.06);\n}\n.input::placeholder {\n  color: #a0aec0;\n}\n.input.input-error {\n  border: 1px solid red;\n  background-image: linear-gradient(to right, pink, pink);\n}\n.input.input-error:focus {\n  border: 1px solid red;\n}\n.input:focus {\n  outline: none;\n  border: 1px solid #a0aec0;\n  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);\n  background-clip: padding-box;\n}\n\n.input-group {\n  margin-bottom: 2rem;\n  position: relative;\n  display: flex;\n  align-items: stretch;\n  justify-content: center;\n}\n\n.flex-child {\n  flex: 1;\n  display: inline-flex;\n  align-items: center;\n  padding: 20px;\n  border: 2px solid #e4dddd;\n}\n\n.error-message {\n  font-size: 0.85rem;\n  color: red;\n  position: absolute;\n  top: 75px;\n  left: 22;\n}\n\n.badge {\n  border: 1px solid #388fe6c4;\n  color: #388fe6c4;\n  padding: 2px 6px;\n  border-radius: 4px;\n  font-size: 12pt;\n  font-weight: bolder;\n  vertical-align: initial;\n  margin-left: 10px;\n}',"",{version:3,sources:["webpack://./src/css/style.scss"],names:[],mappings:"AAIA;EACE,8CALY;EAMZ,YALW;EAMX,eALU;AAEZ;;AAKA;EACE,yBAAA;EACA,YAAA;EACA,YAAA;EACA,YAAA;EACA,kBAAA;EACA,qBAAA;EACA,qBAAA;EACA,eAAA;EACA,eAAA;EACA,eAAA;EACA,aAAA;AAFF;;AAIA;EACE,kBAAA;AADF;AAEE;EACE,2BAAA;AAAJ;AAEE;EACE,aAAA;AAAJ;AAEE;EACE,yBAAA;EACA,aAAA;AAAJ;;AAIA;EACE,qBAAA;EACA,gBAAA;AADF;;AAIA;EACE,qBAAA;EACA,eAAA;EACA,iBAAA;AADF;;AAIA;EACE,gBAAA;EACA,cAAA;EACA,aAAA;AADF;;AAGA;EACE,mBAAA;EACA,sBAAA;EACA,6BAAA;AAAF;AACE;EACE,sBAAA;AACJ;;AAGA;EACE,yBAAA;EACA,SAAA;EACA,sCAAA;EACA,2BAAA;AAAF;AACE;EACE,sCAAA;AACJ;;AAGA;EACE,wBAAA;AAAF;;AAGA;EACE,WAAA;EACA,YAAA;EAEA,SAAA;EACA,UAAA;EACA,oBAAA;EACA,UAAA;AADF;AAGE;EACE,WAAA;AADJ;AAIE;EACE,SAAA;AAFJ;;AAMA;EACE,gBAAA;EACA,iBAAA;EACA,aAAA;EACA,sBAAA;EACA,sBAAA;EACA,uBAAA;EACA,qFAAA;AAHF;;AAMA;EACE,gBAAA;EAGA,cAAA;EACA,yBAAA;EACA,iBAAA;EACA,uBAAA;EACA,wBAAA;EACA,sBAAA;EACA,iDAAA;AALF;AAOE;EACE,cAAA;AALJ;AAQE;EACE,qBAAA;EACA,uDAAA;AANJ;AAQI;EACE,qBAAA;AANN;AAUE;EACE,aAAA;EACA,yBAAA;EACA,2EAAA;EACA,4BAAA;AARJ;;AAmBA;EACE,mBAAA;EACA,kBAAA;EACA,aAAA;EACA,oBAAA;EACA,uBAAA;AAhBF;;AAkBA;EACE,OAAA;EACA,oBAAA;EACA,mBAAA;EACA,aAAA;EACA,yBAAA;AAfF;;AAkBA;EACE,kBAAA;EACA,UAAA;EACA,kBAAA;EACA,SAAA;EACA,QAAA;AAfF;;AAkBA;EACE,2BAAA;EAEA,gBAAA;EACA,gBAAA;EACA,kBAAA;EACA,eAAA;EACA,mBAAA;EACA,uBAAA;EACA,iBAAA;AAhBF",sourcesContent:['$font-family: "Courier New", Courier, monospace;\r\n$text-color: black;\r\n$font-size: 12pt;\r\n\r\n.main-font {\r\n  font-family: $font-family;\r\n  color: $text-color;\r\n  font-size: $font-size;\r\n}\r\ninput.btn {\r\n  background-color: #3363cc;\r\n  border: none;\r\n  color: white;\r\n  padding: 7px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 16px;\r\n  margin: 4px 2px;\r\n  cursor: pointer;\r\n  outline: none;\r\n}\r\n.btn {\r\n  border-radius: 6px;\r\n  &:active {\r\n    box-shadow: 0 1px 0 #3363cc;\r\n  }\r\n  &.btn-register {\r\n    padding: 11px;\r\n  }\r\n  &.btn-update {\r\n    background-color: #3c9c3c;\r\n    padding: 11px;\r\n  }\r\n}\r\n\r\n.app-list{\r\n  list-style-type: none;\r\n  padding: inherit;\r\n}\r\n\r\n.app-name-link {\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\ninput {\r\n  display:flexbox;\r\n  margin:10px 0;\r\n  padding:10px;\r\n}\r\n.type-1 {\r\n  border-radius:10px;\r\n  border: 1px solid #eee;\r\n  transition: .3s border-color;\r\n  &:hover {\r\n    border: 1px solid #aaa;\r\n  }\r\n}\r\n\r\n.type-2 {\r\n  background-color: #fafafa;\r\n  border:0;\r\n  box-shadow:0 0 4px rgba(0,0,0,0.3);\r\n  transition: .3s box-shadow;\r\n  &:hover {\r\n    box-shadow:0 0 4px rgba(0,0,0,0.5);\r\n  }\r\n}\r\n\r\n.hidden {\r\n  display: none !important;\r\n}\r\n\r\n.icon {\r\n  width: 24px;\r\n  height: 24px;\r\n  // position: absolute;\r\n  top: 32px; \r\n  right: 5px;\r\n  pointer-events: none;\r\n  z-index: 2;\r\n  \r\n  &.icon-success {\r\n    fill: green;\r\n  }\r\n  \r\n  &.icon-error {\r\n    fill: red;\r\n  }\r\n}\r\n\r\n.container {\r\n  max-width: 800px;\r\n  margin: 3rem auto;\r\n  padding: 3rem;\r\n  border: 1px solid #ddd;\r\n  border-radius: .25rem;\r\n  background-color: white;\r\n  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\r\n}\r\n\r\n.input {\r\n  appearance: none;\r\n  // display: block;\r\n  // width: 100%;\r\n  color: #2d3748;\r\n  border: 1px solid #cbd5e0;\r\n  line-height: 1.25;\r\n  background-color: white;\r\n  padding: .65rem .75rem;\r\n  border-radius: 0.25rem;\r\n  box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, 0.06);\r\n  \r\n  &::placeholder {\r\n    color: #a0aec0;\r\n  }\r\n  \r\n  &.input-error {\r\n    border: 1px solid red;\r\n    background-image: linear-gradient(to right, pink, pink);\r\n    \r\n    &:focus {\r\n      border: 1px solid red;\r\n    }\r\n  }\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    border: 1px solid #a0aec0;\r\n    box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);\r\n    background-clip: padding-box;\r\n  }\r\n  // &:invalid:required {\r\n  //   background-image: linear-gradient(to right, pink, lightgreen);\r\n  // }\r\n  \r\n  // &:valid {\r\n  //   border: 2px solid black;\r\n  // }\r\n}\r\n\r\n.input-group {\r\n  margin-bottom: 2rem;\r\n  position: relative;\r\n  display: flex;\r\n  align-items:stretch;\r\n  justify-content: center;\r\n}\r\n.flex-child{\r\n  flex: 1;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  padding: 20px;\r\n  border: 2px solid #e4dddd;\r\n}\r\n\r\n.error-message {\r\n  font-size: .85rem;\r\n  color: red;\r\n  position: absolute;\r\n  top: 75px;\r\n  left: 22;\r\n}\r\n\r\n.badge {\r\n  border: 1px solid #388fe6c4;\r\n  // background-color: initial;\r\n  color: #388fe6c4;\r\n  padding: 2px 6px;\r\n  border-radius: 4px;\r\n  font-size: 12pt;\r\n  font-weight: bolder;\r\n  vertical-align: initial;\r\n  margin-left: 10px;\r\n}'],sourceRoot:""}]);const a=A},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r=n(e);return e[2]?"@media ".concat(e[2]," {").concat(r,"}"):r})).join("")},e.i=function(n,r,t){"string"==typeof n&&(n=[[null,n,""]]);var o={};if(t)for(var i=0;i<this.length;i++){var A=this[i][0];null!=A&&(o[A]=!0)}for(var a=0;a<n.length;a++){var d=[].concat(n[a]);t&&o[d[0]]||(r&&(d[2]?d[2]="".concat(r," and ").concat(d[2]):d[2]=r),e.push(d))}},e}},15:n=>{function e(n,e){(null==e||e>n.length)&&(e=n.length);for(var r=0,t=new Array(e);r<e;r++)t[r]=n[r];return t}n.exports=function(n){var r,t,o=(t=4,function(n){if(Array.isArray(n))return n}(r=n)||function(n,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(n)){var r=[],t=!0,o=!1,i=void 0;try{for(var A,a=n[Symbol.iterator]();!(t=(A=a.next()).done)&&(r.push(A.value),!e||r.length!==e);t=!0);}catch(n){o=!0,i=n}finally{try{t||null==a.return||a.return()}finally{if(o)throw i}}return r}}(r,t)||function(n,r){if(n){if("string"==typeof n)return e(n,r);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?e(n,r):void 0}}(r,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[1],A=o[3];if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(A)))),d="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),c="/*# ".concat(d," */"),l=A.sources.map((function(n){return"/*# sourceURL=".concat(A.sourceRoot||"").concat(n," */")}));return[i].concat(l).concat([c]).join("\n")}return[i].join("\n")}},640:(n,e,r)=>{r.r(e),r.d(e,{default:()=>A});var t=r(379),o=r.n(t),i=r(112);o()(i.Z,{insert:"head",singleton:!1});const A=i.Z.locals||{}},873:(n,e,r)=>{r.r(e),r.d(e,{default:()=>A});var t=r(379),o=r.n(t),i=r(747);o()(i.Z,{insert:"head",singleton:!1});const A=i.Z.locals||{}},379:(n,e,r)=>{var t,o=function(){var n={};return function(e){if(void 0===n[e]){var r=document.querySelector(e);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}n[e]=r}return n[e]}}(),i=[];function A(n){for(var e=-1,r=0;r<i.length;r++)if(i[r].identifier===n){e=r;break}return e}function a(n,e){for(var r={},t=[],o=0;o<n.length;o++){var a=n[o],d=e.base?a[0]+e.base:a[0],c=r[d]||0,l="".concat(d," ").concat(c);r[d]=c+1;var s=A(l),p={css:a[1],media:a[2],sourceMap:a[3]};-1!==s?(i[s].references++,i[s].updater(p)):i.push({identifier:l,updater:b(p,e),references:1}),t.push(l)}return t}function d(n){var e=document.createElement("style"),t=n.attributes||{};if(void 0===t.nonce){var i=r.nc;i&&(t.nonce=i)}if(Object.keys(t).forEach((function(n){e.setAttribute(n,t[n])})),"function"==typeof n.insert)n.insert(e);else{var A=o(n.insert||"head");if(!A)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");A.appendChild(e)}return e}var c,l=(c=[],function(n,e){return c[n]=e,c.filter(Boolean).join("\n")});function s(n,e,r,t){var o=r?"":t.media?"@media ".concat(t.media," {").concat(t.css,"}"):t.css;if(n.styleSheet)n.styleSheet.cssText=l(e,o);else{var i=document.createTextNode(o),A=n.childNodes;A[e]&&n.removeChild(A[e]),A.length?n.insertBefore(i,A[e]):n.appendChild(i)}}function p(n,e,r){var t=r.css,o=r.media,i=r.sourceMap;if(o?n.setAttribute("media",o):n.removeAttribute("media"),i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}var u=null,f=0;function b(n,e){var r,t,o;if(e.singleton){var i=f++;r=u||(u=d(e)),t=s.bind(null,r,i,!1),o=s.bind(null,r,i,!0)}else r=d(e),t=p.bind(null,r,e),o=function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)};return t(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;t(n=e)}else o()}}n.exports=function(n,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=(void 0===t&&(t=Boolean(window&&document&&document.all&&!window.atob)),t));var r=a(n=n||[],e);return function(n){if(n=n||[],"[object Array]"===Object.prototype.toString.call(n)){for(var t=0;t<r.length;t++){var o=A(r[t]);i[o].references--}for(var d=a(n,e),c=0;c<r.length;c++){var l=A(r[c]);0===i[l].references&&(i[l].updater(),i.splice(l,1))}r=d}}}}},e={};function r(t){var o=e[t];if(void 0!==o)return o.exports;var i=e[t]={id:t,exports:{}};return n[t](i,i.exports,r),i.exports}r.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return r.d(e,{a:e}),e},r.d=(n,e)=>{for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),r.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},(()=>{r(640),r(873);var n,e=r(295),t=r(499),o=(n=r(149))&&n.__esModule?n:{default:n};!function(n){var r=document.getElementById("app-list"),i=document.getElementById("sync-all"),A=document.getElementById("app-name"),a=document.getElementById("selected-app"),d=!1,c=document.getElementById("form-btn"),l=document.querySelector(".form");function s(){e.appList.forEach((function(n,e){var r;r="Element"+e+" "+n.id,console.log(""+r),p(n)}))}function p(n){var t=document.createElement("li");t.id="li-"+n.id;var o=document.createElement("a");o.id="link-"+n.id,o.href="#",o.className="app-name-link",o.appendChild(document.createTextNode(""+n.name)),o.onclick=function(){return function(n){return(0,e.setSelectedApp)(n),f(e.selectedApp.name,!0),A.value=e.selectedApp.name,A.dispatchEvent(new Event("change",{bubbles:!0})),b(d=!0),!1}(n)},t.appendChild(o),t.appendChild(document.createTextNode(" >>> "));var i=function(n){var e=document.createElement("input");for(var r in n)e[r]=n[r];return e}({id:"button-"+n.id,type:"button",value:"Get Info",className:"btn"});t.appendChild(i),function(n,e,r){r.onclick=function(){u(n,e)}}(t,n,i),r.prepend(t)}function u(n,e){var r=document.createElement("span");r.id="span-00"+e.id,n.appendChild(r),document.getElementById(r.id).innerHTML=" Loading... ",setTimeout((function(){document.getElementById(r.id).innerHTML=" >>> "+e.id}),500)}function f(n,e){e?(a.innerText=""+n,a.classList.remove("hidden")):(a.innerText="",a.classList.add("hidden"))}function b(n){n?(c.value="Update App",c.classList.add("btn-update"),c.classList.remove("btn-register")):(c.value="Register App",c.classList.add("btn-register"),c.classList.remove("btn-update"))}function m(n){return!(-1===n.search(/^(?!.*\d-\d)[A-Za-z0-9]+(-[A-Za-z0-9]+)?$/)&&(E("not valid name"),1))}function E(n){alert(""+n)}new o.default(l,["app-name"]).initialize(),console.log("Apps => ",(0,e.getAppList)()),(0,e.getSelectedApp)(),s(),i.onclick=function(){e.appList.forEach((function(n){var e="li-"+n.id;u(document.getElementById(e),n)}))},c.onclick=function(n){if(d){if(A.value){var o=e.appList.some((function(n){return n.name===A.value&&n.id!==e.selectedApp.id}));if(!m(A.value))return;o?E("Oops looks like the "+A.value+" already exists!!!"):((0,e.updateAppName)(e.selectedApp.id,A.value),r.innerHTML="",s(),d=!1,f(null,!1),A.value="",b(d))}}else A.value&&function(n){console.log("Registering App => "+n);var r=e.appList.some((function(e){return e.name===n}));if(m(n))if(r)E("Oops looks like the "+n+" already exists!!!");else{var o={name:n,id:(0,t.uuidv4)()};(0,e.appRegisterService)(o),p(o),A.value="",A.dispatchEvent(new Event("change",{bubbles:!0}))}}(A.value)}}(window)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,